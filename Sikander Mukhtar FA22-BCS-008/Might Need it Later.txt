
    Volunteer[] volunteers;

    private String name;
    private String email;
    private String password;
    private String phoneNumber;

    public String getName() {
        return name;
    }
    public void setName(String name) {
        this.name= name;
    }
    public String getEmail() {
        return email;
    }
    public void setEmail(String email) {
        this.email= email;
    }
    public String getPassword() {
        return password;
    }
    public void setPassword(String password) {
        this.password= password;
    }

    public String getPhoneNumber() {
        return phoneNumber;
    }

    public void setPhoneNumber(String phoneNumber) {
       this.phoneNumber = phoneNumber;
    }
   





    public static void printArray(String[] entered) {
        for(int i = 0; i < entered.length; i++) {
            System.out.println(entered[i]);
        }
    }


    public static String[] getNameOfVolunteer(int range){
        String[] entered=new String[10];
        for (int j=0; j<10; j++) {
            System.out.println("Enter Name: ");
            entered[j]=scan.nextLine();
        }
        return entered;
    }

The Arrays.copyOf() method in Java creates a new array that is a copy of the original array. It allows you to specify the length of the new array, which can be greater or less than the length of the original array.

If the new array is longer than the original, the additional elements are initialized to the default value for the element type (0 for int, null for Object, etc.). If the new array is shorter than the original, only the first elements that fit in the new array are copied over.

The Arrays.copyOf() method can be useful when you need to resize an array, or when you want to make a copy of an array that you can modify without affecting the original.









 public void registerStudents(int ArraySize) {
                volunteers=new Volunteer[ArraySize];
                //scan.nextLine();
                for(int j=0; j<1; j++){
                    System.out.println("Enter Name : "+(i+1));
                    name=scan.nextLine();
                  //  volunteer.setVolunteerName(name);


                    System.out.println("Enter Email : ");
                    email=scan.nextLine();
                //    volunteer.setVolunteerEmail(email);


                    System.out.println("Enter Password : ");
                    password=scan.nextLine();
              //      volunteer.setVolunteerPassword(password);


                    System.out.println("Enter Mobile Phone : ");
                    phoneNumber=scan.nextLine();
            //        volunteer.setVolunteerPhoneNumber(phoneNumber);


                    volunteer= new Volunteer(volunteer.getVolunteerName(),volunteer.getVolunteerEmail(),volunteer.getVolunteerPassword(),volunteer.getVolunteerPhoneNumber());
                    volunteers[i]=volunteer;
                        i++;
                }
            }

























    static Volunteer data=new Volunteer();
    static int i=0;
    static Scanner scan = new Scanner(System.in);
    private static String skillToOffer;
    private static String noteInSection2;
    private static String dateAndTime;


    public static Volunteer[] fillSection2(int range) {
        Volunteer[] volunteer=new Volunteer[range];
        //MembershipRegistration[] member=new MembershipRegistration[range];
        for (int j = 0; j < volunteer.length; j++) {

            System.out.println("Skill to Offer : ");
            skillToOffer = scan.nextLine();

            System.out.println("Note : ");
            noteInSection2 = scan.nextLine();

            System.out.println("Date and Time : ");
            dateAndTime = scan.nextLine();

            volunteer[i]=new Volunteer(data.getVolunteerName(),data.getVolunteerEmail(),data.getVolunteerPassword(),data.getVolunteerPhoneNumber(),skillToOffer,noteInSection2,dateAndTime);
            i++;
        }
         return Arrays.copyOf(volunteer,i);
    }

    public String getSkillToOffer() {
        return skillToOffer;
    }

    public void setSkillToOffer(String skillToOffer) {
        this.skillToOffer = skillToOffer;
    }

    public String getNoteInSection2() {
        return noteInSection2;
    }

    public void setNoteInSection2(String noteInSection2) {
        this.noteInSection2 = noteInSection2;
    }

    public String getDateAndTime() {
        return dateAndTime;
    }

    public void setDateAndTime(String dateAndTime) {
        this.dateAndTime = dateAndTime;
    }

















if (numberOfVolunteers < volunteers.length) {

                        System.out.println("Enter Name: ");
                        String name = input.nextLine();

                        System.out.println("Enter Email : ");
                        String email = input.nextLine();

                        System.out.println("Enter Password : ");
                        String password = input.nextLine();

                        System.out.println("Enter Mobile Phone : ");
                        String mobileNumber = input.nextLine();

                        System.out.println("Skill to Offer : ");
                        String skillToOffer = input.nextLine();

                        System.out.println("Note : ");
                        String note = input.nextLine();

                        System.out.println("Date and Time : ");
                        String dateAndTime = input.nextLine();

                        Volunteer volunteer = new Volunteer(name, email, password, mobileNumber, skillToOffer, note, dateAndTime);
                        volunteers[numberOfVolunteers] = volunteer;
                        numberOfVolunteers++;

                    } else {
                        System.out.println("Maximum number of volunteers reached.");
                    }